@page "/shop"
@using System.Security.Claims
@using BootstrapBlazor.Components;
@using M150EBusinessApplikation.Data;
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using Microsoft.EntityFrameworkCore

@inject ProtectedLocalStorage ProtectedLocalStorageStore
@inject IJSRuntime JsRuntime
@attribute [Authorize(Roles = "Admin, User")]
@inject ApplicationDbContext Db
@inject AuthenticationStateProvider GetAuthenticationStateAsync
@inject DialogService DialogService
@inject NavigationManager Nav

<style>
    body {
        overflow-y: scroll !important;
    }

    div.shopControl {
        display: block;
        margin: 50px;
        text-align: left;
    }

    .shopControl div {
        font-size: 60px;
        font-family: 'Poppins', sans-serif;
        color: whitesmoke;
    }

    div.itemListContainer {
        width: 100%;
        display: flex;
        margin: 10px;
        flex-direction: column;
        align-items: flex-start;
    }

    div.itemContainer {
        background-color: #1d1d1d7d;
        border-radius: 5px;
        padding: 20px;
        height: auto;
        width: 85%;
        align-self: center;
        margin: 30px;
    }

    .itemImageContainer {
        display: inline-block;
    }

    .itemText {
        padding: 10px;
        padding-top: 0px;
        margin-top: -8px;
        position: relative;
        top: 10px;
        display: inline-block;
        color: whitesmoke;
    }

    .itemButton {
        float: right;
    }

    .itemImage {
        width: 200px;
        border-radius: 5px;
    }


    .shopItemDescription, .shopItemName, .shopItemPrice {
        font-size: 15px;
        font-family: 'Poppins', sans-serif !important;
        text-shadow: #333 1px 0 10px;
    }

    .shopItemName {
        font-size: 30px;
    }

    p.shopItemPrice {
        margin-top: 10px;
        font-size: 25px;
    }
    .championInfoOutput{
        display: inline-block;
        color: whitesmoke;
        display:none;
        font-family: 'Poppins', sans-serif !important;
        text-shadow: #333 1px 0 10px;
        font-size: 12px;
    }
</style>
@code {
    protected List<UserGameChampion> ChampionsToBuy = null!;

    protected ClaimsPrincipal? User;
    protected UserProfil UserProfil = null!;
    protected Task<AuthenticationState> AuthState = null!;
    protected string? Name;


    public void LoadUser()
    {
        AuthState = GetAuthenticationStateAsync.GetAuthenticationStateAsync()!;
        User = AuthState.Result?.User;
        Name = User?.Identity?.Name;
    }
    public void LoadChampionsToBuy()
    {
        ChampionsToBuy = Db.UserGameChampions.Where(t => t.Bought == false).ToList();
    }

    private void InitializeUserProfil()
    {
        UserProfil = Db.UserProfiles.FirstOrDefault(u => u.Username == Name);

        if (UserProfil == null)
        {
            Db.UserProfiles.Add(new Data.UserProfil()
                {
                    Username = Name,
                    Coins = 0,
                    Tries = null

                });
            Db.SaveChanges();
        }
    }
    protected override async Task OnInitializedAsync()
    {
        LoadUser();
        LoadChampionsToBuy();
        InitializeUserProfil();
    }

    private void AddChampionToCart(UserGameChampion champToBuy)
    {

    }
    private async Task ChampionInfo(Champion champion)
    {
        var jsonChampion = System.Text.Json.JsonSerializer.Serialize(champion, new System.Text.Json.JsonSerializerOptions()
            {
                ReferenceHandler = System.Text.Json.Serialization.ReferenceHandler.Preserve
            });
        await JsRuntime.InvokeVoidAsync("championInfo", jsonChampion);
    }
}

<PageTitle>Shop</PageTitle>

<div class="shopControl">
    <div>
        Champion Shop
    </div>
    <div>
        Coins: @UserProfil.Coins
    </div>
</div>
<div class="itemListContainer">
    @foreach (var item in ChampionsToBuy.OrderBy(t => t.Champion.Price))
    {
        <div class="itemContainer">
            <div class="itemImageContainer">
                <img src="@item.Champion.ImageUrl" class="itemImage" />
            </div>
            <div class="itemText">
                <h3 class="shopItemName">@item.Champion.Name</h3>
                <p class="shopItemPrice">Price: @item.Champion.Price</p>
            </div>
            <div id="championInfoOutput_@item.Champion.Name" class="championInfoOutput">
            </div>
            <div class="itemButton">
                <button class="btn btn-primary" @onclick="() => ChampionInfo(item.Champion)">Info</button>
                <button class="btn btn-primary" @onclick="() => AddChampionToCart(item)">Add to cart</button>
            </div>
        </div>
    }
</div>