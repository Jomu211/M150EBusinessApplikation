@page "/deletechampion/{Id:int}"

@using System.Security.Claims
@using BootstrapBlazor.Components;
@using M150EBusinessApplikation.Data;
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Mvc;
@using Microsoft.EntityFrameworkCore
@using System.Diagnostics.CodeAnalysis;
@using Microsoft.AspNetCore.Components.Forms

@inject ProtectedLocalStorage ProtectedLocalStorageStore
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
@inject HttpClient _httpClient
@attribute [Authorize(Roles = "Admin")]
@inject ApplicationDbContext db
@inject AuthenticationStateProvider GetAuthenticationStateAsync
@inject DialogService DialogService
@inject Microsoft.AspNetCore.Components.NavigationManager navigation


<h3 class="text-center loginContainer">Delete Champion</h3>
<div class="flexContainer">
    <div class="innerLoginContainer">
        <div class="loginContainer">

            <button type="button" class="ml-md-auto btn btn-primary" @onclick="() => cancel()">Cancel</button>

            <button type="button" class="ml-md-auto btn btn-primary" @onclick="() => Delete()">Delete</button>
        </div>
    </div>
</div>



@code {
    [Parameter]
    public int Id { get; set; }
    protected override async Task OnParametersSetAsync()
    {
        champion = await db.Champions.Include(c => c.Head).FirstOrDefaultAsync(c => c.Id == Id);
    }
    private Champion champion = new Champion();
    protected override async Task OnInitializedAsync() => champion.Head = new Head();

    private async Task Delete()
    {
        db.Champions.Remove(champion);
        db.Entry(champion).State = EntityState.Deleted;
        db.Entry(champion.Head).State = EntityState.Deleted;

        await db.SaveChangesAsync();
        navigation.NavigateTo("/championgameadmin");
    }
    void cancel()
    {
        navigation.NavigateTo("/championgameadmin");
    }

}
